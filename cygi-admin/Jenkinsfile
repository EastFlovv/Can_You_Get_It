pipeline {
    agent any
    //def WORKSPACE = "/var/jenkins_home/workspace/back-admin/cygi-admin/"
    //def dockerImageTag = "back-admin-${env.BUILD_NUMBER}"
    stages {
    

        stage('Clone Repo'){
            git url: 'https://lab.ssafy.com/s08-final/S08P31A806.git',
                credentialsId: 'wnsdk', // Jenkins에서 설정한 credential의 ID
                branch: 'deploy-back-admin'
        }

        stage('Gradle Build'){
            dir('cygi-admin/'){
                sh 'ls'
                sh 'chmod +x ./gradlew'
                sh './gradlew clean build'
                //echo "Docker Image Tag Name: ${dockerImageTag}"
            }
        }

        stage('Build Docker'){
            sh "docker build -t back-admin:${env.BUILD_NUMBER} cygi-admin/"
        }

        stage('Deploy Docker'){
            //echo "Docker Image Tag Name: ${dockerImageTag}"
            sh "docker stop back-admin || true && docker rm back-admin || true"
            sh "docker run --name back-admin -d -p 3000:8080 back-admin:${env.BUILD_NUMBER}"
            sh "docker image prune -a -f || true"
        }
    }
    post {
        success {
            mattermostSend color: 'good', endpoint: 'https://meeting.ssafy.com/hooks/xz7cow4ja3b1dxdwzfe7o6j1na', message: '전체 파이프라인 실행 성공'
        }
        failure {
            mattermostSend color: 'danger', endpoint: 'https://meeting.ssafy.com/hooks/xz7cow4ja3b1dxdwzfe7o6j1na', message: '전체 파이프라인 실행 실패'
        }
    }
}

